{
  "contractName": "CrowdsaleTemplate",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "capReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "finalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_rate",
          "type": "uint256"
        },
        {
          "name": "_wallet",
          "type": "address"
        },
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_openingTime",
          "type": "uint256"
        },
        {
          "name": "_closingTime",
          "type": "uint256"
        },
        {
          "name": "_cap",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CrowdsaleFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "prevClosingTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "newClosingTime",
          "type": "uint256"
        }
      ],
      "name": "TimedCrowdsaleExtended",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.2+commit.1df8f40c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"hasClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOpen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"capReached\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"openingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_rate\",\"type\":\"uint256\"},{\"name\":\"_wallet\",\"type\":\"address\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_openingTime\",\"type\":\"uint256\"},{\"name\":\"_closingTime\",\"type\":\"uint256\"},{\"name\":\"_cap\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CrowdsaleFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"prevClosingTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newClosingTime\",\"type\":\"uint256\"}],\"name\":\"TimedCrowdsaleExtended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"cap()\":{\"return\":\"the cap of the crowdsale.\"},\"capReached()\":{\"details\":\"Checks whether the cap has been reached.\",\"return\":\"Whether the cap was reached\"},\"closingTime()\":{\"return\":\"the crowdsale closing time.\"},\"finalize()\":{\"details\":\"Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function.\"},\"finalized()\":{\"return\":\"true if the crowdsale is finalized, false otherwise.\"},\"hasClosed()\":{\"details\":\"Checks whether the period in which the crowdsale is open has already elapsed.\",\"return\":\"Whether crowdsale period has elapsed\"},\"isOpen()\":{\"return\":\"true if the crowdsale is open, false otherwise.\"},\"openingTime()\":{\"return\":\"the crowdsale opening time.\"},\"rate()\":{\"return\":\"the number of token units a buyer gets per wei.\"},\"token()\":{\"return\":\"the token being sold.\"},\"wallet()\":{\"return\":\"the address where funds are collected.\"},\"weiRaised()\":{\"return\":\"the amount of wei raised.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/joonwookim/Projects/erc20-maker/contracts/contracts/CrowdsaleTemplate.sol\":\"CrowdsaleTemplate\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/joonwookim/Projects/erc20-maker/contracts/contracts/CrowdsaleTemplate.sol\":{\"keccak256\":\"0x9c95ffb0fc92b4ef5ae7b81b491cb9ec41d648a08267eb06d37f334015047a14\",\"urls\":[\"bzzr://ac1d540ecdcc277fcf93635c713c57919ed0ef5836bedb48cc3dd901bf5b0b41\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0x75481aaa988c5e9fbc91b4f695678806579c04e0ad56907978c1ca5c7e92a682\",\"urls\":[\"bzzr://da472135eb9268d863825ea26e227a9f8980c54bd32e0764d61711acca59fc89\"]},\"openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x317b01d5df6753f57244b354d0a23d5055b293f3fa22693c2ff7906cc988ce97\",\"urls\":[\"bzzr://d3f08352c241a34db9b244c5fb569c7ffb3dcd1a0aa288c855a4a70eddb9e2a3\"]},\"openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol\":{\"keccak256\":\"0xcadc0403322981be5a0c498c03e12086afc4c3fcd8e3aea490005565b67dc73c\",\"urls\":[\"bzzr://32974dddcd7d92ff6c1b249ebdd664869e03b988798087cb7d89410687e27113\"]},\"openzeppelin-solidity/contracts/crowdsale/distribution/FinalizableCrowdsale.sol\":{\"keccak256\":\"0xa592b6604f46b935af36b7f558baa7ba0abfb54066df19aab10355ea03f63129\",\"urls\":[\"bzzr://249623a77d96484069a1a989d033f683082c7fe996ef132921210efb53662d6c\"]},\"openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol\":{\"keccak256\":\"0xb69ca90ebab957646650c5d19999e4869a34fc1cc152a55ff58d130a95b3439c\",\"urls\":[\"bzzr://6e33501327095e52cd08d294e88c066d6e1b5363071b32e88e95901f4befea23\"]},\"openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol\":{\"keccak256\":\"0x67d89e4724382758ddd45f649c01193202ea6a77f86c5fc1bf47c35769cde912\",\"urls\":[\"bzzr://3943123d0ee09a8a63309a010efaad3cb2446566d0739f77af1baa02075a70ff\"]},\"openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol\":{\"keccak256\":\"0x7525276fa7486eb2cc9f3c82529fc1c68e444698ef838d9cbc9485ebf4c44b16\",\"urls\":[\"bzzr://578b80cc766226fd8688c5f8571f56d62a76b6f41c07cb7e8a191a521e9f0b51\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3dceb7e4aa237a56111c13f77d7efadeceda7271d62bfac94ac79afab7c1f411\",\"urls\":[\"bzzr://2f34152a5bec385352002c31bc89f5e9935f628f1923ccea45c2281e0084a4db\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xd7956aed5535d9563bef5482c6fc41894aed3352aab764b3397bbc33dc2de0ea\",\"urls\":[\"bzzr://77acda78fc09e0be0c1954db02a97bed0f211618be5153ad5aed0bc0cf13f778\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]},\"openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x7230c14d692aff375e4931d60ef73ac8a79c28b9e54c200a377b7dc613c81a78\",\"urls\":[\"bzzr://3538d7da02640c67ac909e84d90e799439f3b3195cf0de39fd173dacd5a98311\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzzr://aa2b2eb534149525e194341c01cadf666668a1b7d679a268d10e23570a7e26b1\"]},\"openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x080fa336eb92fca1f96bf5c7738b6ef6e23582809d81868e9498c08e1207c125\",\"urls\":[\"bzzr://3bc299fd722679f1313dc1387e2efc0591dcddc3727b6a7ccc98132c6e02f323\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405160c080610aa5833981018060405260c081101561003057600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050808383888888600160008190555060008311151561009057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156100cc57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561010857600080fd5b8260038190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050504282101515156101a357600080fd5b81811115156101b157600080fd5b816005819055508060068190555050506000811115156101d057600080fd5b80600781905550506000600860006101000a81548160ff02191690831515021790555050505050505061089d806102086000396000f3fe6080604052600436106100df576000357c0100000000000000000000000000000000000000000000000000000000900480634bb278f31161009c578063b3f05b9711610076578063b3f05b9714610291578063b7a8807c146102c0578063ec8ac4d8146102eb578063fc0c546a1461032f576100df565b80634bb278f3146101f45780634f9359451461020b578063521eb2731461023a576100df565b80631515bc2b146100ea5780632c4e722e14610119578063355274ea146101445780634042b66f1461016f57806347535d7b1461019a5780634b6753bc146101c9575b6100e833610386565b005b3480156100f657600080fd5b506100ff61047c565b604051808215151515815260200191505060405180910390f35b34801561012557600080fd5b5061012e610488565b6040518082815260200191505060405180910390f35b34801561015057600080fd5b50610159610492565b6040518082815260200191505060405180910390f35b34801561017b57600080fd5b5061018461049c565b6040518082815260200191505060405180910390f35b3480156101a657600080fd5b506101af6104a6565b604051808215151515815260200191505060405180910390f35b3480156101d557600080fd5b506101de6104c1565b6040518082815260200191505060405180910390f35b34801561020057600080fd5b506102096104cb565b005b34801561021757600080fd5b5061022061054b565b604051808215151515815260200191505060405180910390f35b34801561024657600080fd5b5061024f61055f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561029d57600080fd5b506102a6610589565b604051808215151515815260200191505060405180910390f35b3480156102cc57600080fd5b506102d56105a0565b6040518082815260200191505060405180910390f35b61032d6004803603602081101561030157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610386565b005b34801561033b57600080fd5b506103446105aa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6001600080828254019250508190555060008054905060003490506103ab83826105d4565b60006103b68261060c565b90506103cd8260045461062a90919063ffffffff16565b6004819055506103dd848261064b565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36104548483610659565b61045c61065d565b61046684836106c8565b50506000548114151561047857600080fd5b5050565b60006006544211905090565b6000600354905090565b6000600754905090565b6000600454905090565b600060055442101580156104bc57506006544211155b905090565b6000600654905090565b600860009054906101000a900460ff161515156104e757600080fd5b6104ef61047c565b15156104fa57600080fd5b6001600860006101000a81548160ff02191690831515021790555061051d6106cc565b7f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183660405160405180910390a1565b600060075461055861049c565b1015905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600860009054906101000a900460ff16905090565b6000600554905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105de82826106ce565b6007546105fb826105ed61049c565b61062a90919063ffffffff16565b1115151561060857600080fd5b5050565b6000610623600354836106ef90919063ffffffff16565b9050919050565b600080828401905083811015151561064157600080fd5b8091505092915050565b610655828261072d565b5050565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156106c5573d6000803e3d6000fd5b50565b5050565b565b6106d66104a6565b15156106e157600080fd5b6106eb8282610821565b5050565b6000808314156107025760009050610727565b6000828402905082848281151561071557fe5b0414151561072257600080fd5b809150505b92915050565b6107356105aa565b73ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156107d757600080fd5b505af11580156107eb573d6000803e3d6000fd5b505050506040513d602081101561080157600080fd5b8101908080519060200190929190505050151561081d57600080fd5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561085d57600080fd5b6000811415151561086d57600080fd5b505056fea165627a7a72305820a6f2cf2f0219df1040576f36a4da73b9977bf295ca61344aa6eb33c048b07fd80029",
  "deployedBytecode": "0x6080604052600436106100df576000357c0100000000000000000000000000000000000000000000000000000000900480634bb278f31161009c578063b3f05b9711610076578063b3f05b9714610291578063b7a8807c146102c0578063ec8ac4d8146102eb578063fc0c546a1461032f576100df565b80634bb278f3146101f45780634f9359451461020b578063521eb2731461023a576100df565b80631515bc2b146100ea5780632c4e722e14610119578063355274ea146101445780634042b66f1461016f57806347535d7b1461019a5780634b6753bc146101c9575b6100e833610386565b005b3480156100f657600080fd5b506100ff61047c565b604051808215151515815260200191505060405180910390f35b34801561012557600080fd5b5061012e610488565b6040518082815260200191505060405180910390f35b34801561015057600080fd5b50610159610492565b6040518082815260200191505060405180910390f35b34801561017b57600080fd5b5061018461049c565b6040518082815260200191505060405180910390f35b3480156101a657600080fd5b506101af6104a6565b604051808215151515815260200191505060405180910390f35b3480156101d557600080fd5b506101de6104c1565b6040518082815260200191505060405180910390f35b34801561020057600080fd5b506102096104cb565b005b34801561021757600080fd5b5061022061054b565b604051808215151515815260200191505060405180910390f35b34801561024657600080fd5b5061024f61055f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561029d57600080fd5b506102a6610589565b604051808215151515815260200191505060405180910390f35b3480156102cc57600080fd5b506102d56105a0565b6040518082815260200191505060405180910390f35b61032d6004803603602081101561030157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610386565b005b34801561033b57600080fd5b506103446105aa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6001600080828254019250508190555060008054905060003490506103ab83826105d4565b60006103b68261060c565b90506103cd8260045461062a90919063ffffffff16565b6004819055506103dd848261064b565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36104548483610659565b61045c61065d565b61046684836106c8565b50506000548114151561047857600080fd5b5050565b60006006544211905090565b6000600354905090565b6000600754905090565b6000600454905090565b600060055442101580156104bc57506006544211155b905090565b6000600654905090565b600860009054906101000a900460ff161515156104e757600080fd5b6104ef61047c565b15156104fa57600080fd5b6001600860006101000a81548160ff02191690831515021790555061051d6106cc565b7f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183660405160405180910390a1565b600060075461055861049c565b1015905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600860009054906101000a900460ff16905090565b6000600554905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105de82826106ce565b6007546105fb826105ed61049c565b61062a90919063ffffffff16565b1115151561060857600080fd5b5050565b6000610623600354836106ef90919063ffffffff16565b9050919050565b600080828401905083811015151561064157600080fd5b8091505092915050565b610655828261072d565b5050565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156106c5573d6000803e3d6000fd5b50565b5050565b565b6106d66104a6565b15156106e157600080fd5b6106eb8282610821565b5050565b6000808314156107025760009050610727565b6000828402905082848281151561071557fe5b0414151561072257600080fd5b809150505b92915050565b6107356105aa565b73ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156107d757600080fd5b505af11580156107eb573d6000803e3d6000fd5b505050506040513d602081101561080157600080fd5b8101908080519060200190929190505050151561081d57600080fd5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561085d57600080fd5b6000811415151561086d57600080fd5b505056fea165627a7a72305820a6f2cf2f0219df1040576f36a4da73b9977bf295ca61344aa6eb33c048b07fd80029",
  "sourceMap": "492:520:0:-;;;610:322;8:9:-1;5:2;;;30:1;27;20:12;5:2;610:322:0;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;610:322:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;863:4;811:12;825;887:5;894:7;903:6;576:1:20;560:13;:17;;;;2378:1:5;2371:4;:8;2363:17;;;;;;;;2416:1;2398:20;;:6;:20;;;;2390:29;;;;;;;;2463:1;2437:28;;2445:5;2437:28;;;;2429:37;;;;;;;;2485:4;2477:5;:12;;;;2509:6;2499:7;;:16;;;;;;;;;;;;;;;;;;2534:5;2525:6;;:14;;;;;;;;;;;;;;;;;;2281:265;;;1036:15:9;1021:11;:30;;1013:39;;;;;;;;1084:11;1070;:25;1062:34;;;;;;;;1122:11;1107:12;:26;;;;1158:11;1143:12;:26;;;;887:289;;488:1:8;482:3;:7;474:16;;;;;;;;507:3;500:4;:10;;;;431:86;459:5:6;446:10;;:18;;;;;;;;;;;;;;;;;;610:322:0;;;;;;492:520;;;;;;",
  "deployedSourceMap": "492:520:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;981:21;991:10;981:9;:21::i;:::-;492:520;1922:156:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1922:156:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3285:75:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3285:75:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;580:73:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;580:73:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3423:85:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3423:85:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1569:189:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1569:189:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1395:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1395:89:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;801:183:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;801:183:6;;;:::i;:::-;;771:92:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;771:92:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3113:87:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3113:87:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;561:82:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;561:82:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1241:89:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1241:89:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3765:603:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3765:603:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;2961:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2961:76:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3765:603;1010:1:20;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;3843:17:5;3863:9;3843:29;;3882:44;3903:11;3916:9;3882:20;:44::i;:::-;3985:14;4002:26;4018:9;4002:15;:26::i;:::-;3985:43;;4076:25;4091:9;4076:10;;:14;;:25;;;;:::i;:::-;4063:10;:38;;;;4112:37;4129:11;4142:6;4112:16;:37::i;:::-;4192:11;4164:59;;4180:10;4164:59;;;4205:9;4216:6;4164:59;;;;;;;;;;;;;;;;;;;;;;;;4234:46;4257:11;4270:9;4234:22;:46::i;:::-;4291:15;:13;:15::i;:::-;4316:45;4338:11;4351:9;4316:21;:45::i;:::-;1067:1:20;;1102:13;;1086:12;:29;1078:38;;;;;;;;3765:603:5;;:::o;1922:156:9:-;1964:4;2059:12;;2041:15;:30;2034:37;;1922:156;:::o;3285:75:5:-;3322:7;3348:5;;3341:12;;3285:75;:::o;580:73:8:-;616:7;642:4;;635:11;;580:73;:::o;3423:85:5:-;3465:7;3491:10;;3484:17;;3423:85;:::o;1569:189:9:-;1608:4;1704:12;;1685:15;:31;;:66;;;;;1739:12;;1720:15;:31;;1685:66;1678:73;;1569:189;:::o;1395:89::-;1439:7;1465:12;;1458:19;;1395:89;:::o;801:183:6:-;847:10;;;;;;;;;;;846:11;838:20;;;;;;;;876:11;:9;:11::i;:::-;868:20;;;;;;;;912:4;899:10;;:17;;;;;;;;;;;;;;;;;;927:15;:13;:15::i;:::-;957:20;;;;;;;;;;801:183::o;771:92:8:-;814:4;852;;837:11;:9;:11::i;:::-;:19;;830:26;;771:92;:::o;3113:87:5:-;3152:15;3186:7;;;;;;;;;;;3179:14;;3113:87;:::o;561:82:6:-;603:4;626:10;;;;;;;;;;;619:17;;561:82;:::o;1241:89:9:-;1285:7;1311:12;;1304:19;;1241:89;:::o;2961:76:5:-;2999:6;3024;;;;;;;;;;;3017:13;;2961:76;:::o;1059:204:8:-;1153:50;1180:11;1193:9;1153:26;:50::i;:::-;1251:4;;1221:26;1237:9;1221:11;:9;:11::i;:::-;:15;;:26;;;;:::i;:::-;:34;;1213:43;;;;;;;;1059:204;;:::o;7003:120:5:-;7070:7;7096:20;7110:5;;7096:9;:13;;:20;;;;:::i;:::-;7089:27;;7003:120;;;:::o;1439:145:10:-;1497:7;1516:9;1532:1;1528;:5;1516:17;;1556:1;1551;:6;;1543:15;;;;;;;;1576:1;1569:8;;;1439:145;;;;:::o;6205:134:5:-;6292:40;6307:11;6320;6292:14;:40::i;:::-;6205:134;;:::o;6609:145::-;;;:::o;7210:78::-;7254:7;;;;;;;;;;;:16;;:27;7271:9;7254:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7254:27:5;7210:78::o;5373:149::-;;;:::o;1193:98:6:-;:::o;2270:165:9:-;672:8;:6;:8::i;:::-;664:17;;;;;;;;2378:50;2405:11;2418:9;2378:26;:50::i;:::-;2270:165;;:::o;231:421:10:-;289:7;534:1;529;:6;525:45;;;558:1;551:8;;;;525:45;580:9;596:1;592;:5;580:17;;624:1;619;615;:5;;;;;;;;:10;607:19;;;;;;;;644:1;637:8;;;231:421;;;;;:::o;510:236:7:-;698:7;:5;:7::i;:::-;676:36;;;713:11;726;676:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;676:62:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;676:62:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;676:62:7;;;;;;;;;;;;;;;;668:71;;;;;;;;510:236;;:::o;4910:168:5:-;5035:1;5012:25;;:11;:25;;;;5004:34;;;;;;;;5069:1;5056:9;:14;;5048:23;;;;;;;;4910:168;;:::o",
  "source": "pragma solidity 0.5.2;\n\nimport \"openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/distribution/FinalizableCrowdsale.sol\";\n\n\ncontract CrowdsaleTemplate is Crowdsale, TimedCrowdsale, CappedCrowdsale, MintedCrowdsale, FinalizableCrowdsale {\n    constructor(\n        uint256 _rate,\n        address payable _wallet,\n        ERC20 _token,\n        uint256 _openingTime,\n        uint256 _closingTime,\n        uint256 _cap\n    )\n        TimedCrowdsale(_openingTime, _closingTime)\n        CappedCrowdsale(_cap)\n        Crowdsale(_rate, _wallet, _token)\n        public\n    {}\n    \n    function () external payable {\n        buyTokens(msg.sender);\n    }\n\n}\n",
  "sourcePath": "/Users/joonwookim/Projects/erc20-maker/contracts/contracts/CrowdsaleTemplate.sol",
  "ast": {
    "absolutePath": "/Users/joonwookim/Projects/erc20-maker/contracts/contracts/CrowdsaleTemplate.sol",
    "exportedSymbols": {
      "CrowdsaleTemplate": [
        55
      ]
    },
    "id": 56,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 56,
        "sourceUnit": 652,
        "src": "24:65:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 56,
        "sourceUnit": 955,
        "src": "90:81:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 56,
        "sourceUnit": 810,
        "src": "172:82:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 56,
        "sourceUnit": 738,
        "src": "255:80:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 56,
        "sourceUnit": 1575,
        "src": "336:63:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/distribution/FinalizableCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/distribution/FinalizableCrowdsale.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 56,
        "sourceUnit": 710,
        "src": "400:89:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 651,
              "src": "522:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$651",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "522:9:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 954,
              "src": "533:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$954",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "533:14:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 809,
              "src": "549:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$809",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "549:15:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 737,
              "src": "566:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$737",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "566:15:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16,
              "name": "FinalizableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 709,
              "src": "583:20:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FinalizableCrowdsale_$709",
                "typeString": "contract FinalizableCrowdsale"
              }
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "583:20:0"
          }
        ],
        "contractDependencies": [
          651,
          709,
          737,
          809,
          954,
          2082
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 55,
        "linearizedBaseContracts": [
          55,
          709,
          737,
          809,
          954,
          651,
          2082
        ],
        "name": "CrowdsaleTemplate",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 44,
              "nodeType": "Block",
              "src": "930:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 45,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 32,
                    "name": "_openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25,
                    "src": "811:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 33,
                    "name": "_closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27,
                    "src": "825:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 34,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 31,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 954,
                  "src": "796:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$954_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "796:42:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 36,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29,
                    "src": "863:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 37,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 35,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 809,
                  "src": "847:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$809_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "847:21:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 39,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "887:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 40,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21,
                    "src": "894:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 41,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23,
                    "src": "903:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1574",
                      "typeString": "contract ERC20"
                    }
                  }
                ],
                "id": 42,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 38,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 651,
                  "src": "877:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$651_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "877:33:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "631:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "631:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "654:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "687:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1574",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 22,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1574,
                    "src": "687:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1574",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "name": "_openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "709:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "709:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "name": "_closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "739:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "739:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "769:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "621:166:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "930:0:0"
            },
            "scope": 55,
            "src": "610:322:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "971:38:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 49,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2097,
                          "src": "991:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "991:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 48,
                      "name": "buyTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 560,
                      "src": "981:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "981:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "981:21:0"
                }
              ]
            },
            "documentation": null,
            "id": 54,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "951:2:0"
            },
            "returnParameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "971:0:0"
            },
            "scope": 55,
            "src": "942:67:0",
            "stateMutability": "payable",
            "superFunction": 471,
            "visibility": "external"
          }
        ],
        "scope": 56,
        "src": "492:520:0"
      }
    ],
    "src": "0:1013:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/joonwookim/Projects/erc20-maker/contracts/contracts/CrowdsaleTemplate.sol",
    "exportedSymbols": {
      "CrowdsaleTemplate": [
        55
      ]
    },
    "id": 56,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 56,
        "sourceUnit": 652,
        "src": "24:65:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 56,
        "sourceUnit": 955,
        "src": "90:81:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 56,
        "sourceUnit": 810,
        "src": "172:82:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 56,
        "sourceUnit": 738,
        "src": "255:80:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 56,
        "sourceUnit": 1575,
        "src": "336:63:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/distribution/FinalizableCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/distribution/FinalizableCrowdsale.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 56,
        "sourceUnit": 710,
        "src": "400:89:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 651,
              "src": "522:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$651",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "522:9:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 954,
              "src": "533:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$954",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "533:14:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 809,
              "src": "549:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$809",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "549:15:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 737,
              "src": "566:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$737",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "566:15:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16,
              "name": "FinalizableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 709,
              "src": "583:20:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FinalizableCrowdsale_$709",
                "typeString": "contract FinalizableCrowdsale"
              }
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "583:20:0"
          }
        ],
        "contractDependencies": [
          651,
          709,
          737,
          809,
          954,
          2082
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 55,
        "linearizedBaseContracts": [
          55,
          709,
          737,
          809,
          954,
          651,
          2082
        ],
        "name": "CrowdsaleTemplate",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 44,
              "nodeType": "Block",
              "src": "930:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 45,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 32,
                    "name": "_openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25,
                    "src": "811:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 33,
                    "name": "_closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27,
                    "src": "825:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 34,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 31,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 954,
                  "src": "796:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$954_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "796:42:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 36,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29,
                    "src": "863:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 37,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 35,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 809,
                  "src": "847:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$809_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "847:21:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 39,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "887:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 40,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21,
                    "src": "894:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 41,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23,
                    "src": "903:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1574",
                      "typeString": "contract ERC20"
                    }
                  }
                ],
                "id": 42,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 38,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 651,
                  "src": "877:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$651_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "877:33:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "631:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "631:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "654:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "687:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1574",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 22,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1574,
                    "src": "687:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1574",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "name": "_openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "709:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "709:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "name": "_closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "739:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "739:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "769:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "621:166:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "930:0:0"
            },
            "scope": 55,
            "src": "610:322:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "971:38:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 49,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2097,
                          "src": "991:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "991:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 48,
                      "name": "buyTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 560,
                      "src": "981:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "981:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "981:21:0"
                }
              ]
            },
            "documentation": null,
            "id": 54,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "951:2:0"
            },
            "returnParameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "971:0:0"
            },
            "scope": 55,
            "src": "942:67:0",
            "stateMutability": "payable",
            "superFunction": 471,
            "visibility": "external"
          }
        ],
        "scope": 56,
        "src": "492:520:0"
      }
    ],
    "src": "0:1013:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-05-14T00:59:05.985Z",
  "devdoc": {
    "methods": {
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "cap()": {
        "return": "the cap of the crowdsale."
      },
      "capReached()": {
        "details": "Checks whether the cap has been reached.",
        "return": "Whether the cap was reached"
      },
      "closingTime()": {
        "return": "the crowdsale closing time."
      },
      "finalize()": {
        "details": "Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function."
      },
      "finalized()": {
        "return": "true if the crowdsale is finalized, false otherwise."
      },
      "hasClosed()": {
        "details": "Checks whether the period in which the crowdsale is open has already elapsed.",
        "return": "Whether crowdsale period has elapsed"
      },
      "isOpen()": {
        "return": "true if the crowdsale is open, false otherwise."
      },
      "openingTime()": {
        "return": "the crowdsale opening time."
      },
      "rate()": {
        "return": "the number of token units a buyer gets per wei."
      },
      "token()": {
        "return": "the token being sold."
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}